from aiogram import types
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter
from start import start, district_kb
from database import add_user, get_user_by_phone
import re
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


class Form(StatesGroup):
    name = State()
    phone = State()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def is_valid_phone(phone):
    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞ +7XXXXXXXXXX
    pattern = r'^\+7\d{10}$'
    return re.match(pattern, phone)

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def cmd_start(message: types.Message, state: FSMContext):
    await state.set_state(Form.name)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é "name"
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!üåü\n \n–Æ—Ä–ü–æ–º–æ—â—å –ß–µ–±–æ–∫—Å–∞—Ä—ã ‚Äî —Å–µ—Ä–≤–∏—Å –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏—ë–º –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è.\n \n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏
async def process_name(message: types.Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ FSM
    await state.update_data(name=message.text)
    await state.set_state(Form.phone)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é "phone"
    await message.answer("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
async def process_phone(message: types.Message, state: FSMContext):
    support_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(
        text="üì© –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", 
        url="https://www.youtube.com/watch?v=1F3OGIFnW1k&list=PLiQyj3m-vBew0phFUFwrt4QQj0j7Z3w-f&index=24"
    )]
    ])
    phone = message.text

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–æ–º–µ—Ä–∞
    if not is_valid_phone(phone):
        await message.answer("–û—à–∏–±–∫–∞‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX")
        return
    
    await state.update_data(phone=phone)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä
    user_data = await state.get_data()
    name = user_data['name']

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º
    existing_user = get_user_by_phone(phone)
    if existing_user:
        if existing_user[1] != name:  # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –§–ò–û
            await message.answer(
                "–û—à–∏–±–∫–∞‚ùå\n–≠—Ç–æ—Ç –Ω–æ–º–µ—Ä —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –¥—Ä—É–≥–∏–º –∏–º–µ–Ω–µ–º.\n–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞ ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
                reply_markup=support_kb
            )
            await state.clear()
            return
        else:
            await message.answer(
                "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞üåü",
                reply_markup=district_kb
            )
            await state.clear()
            await start(message)
            return

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    add_user(name, phone)

     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–∏–ª—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user_in_db = get_user_by_phone(phone)
    if user_in_db:
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:\n–§–ò–û: {user_in_db[1]}\n–¢–µ–ª–µ—Ñ–æ–Ω: {user_in_db[2]}")
    else:
        print("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω!")

    # –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.answer(
        f"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞‚úÖ\n–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n–§–ò–û: {name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone}",
        reply_markup=district_kb  # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –º–µ–Ω—é —Å —Ä–∞–π–æ–Ω–∞–º–∏
    )

    await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

    # –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ start, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –º–µ–Ω—é —Ä–∞–π–æ–Ω–æ–≤
    await start(message)  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ start –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è